#!/bin/bash
# For use inside Nimplay Docker image.
NIM_FILE=$1
WASM_FILE="${NIM_FILE%.*}.wasm"
PANIC_PATH="$(dirname ${NIM_FILE})"

set -ex
PATH_PARAMS="-p:/nimplay/ -p:/nimplay/vendor/nimcrypto -p:/nimplay/vendor/stint -p:/nimplay/vendor/nim-stew/"
NIM_CLANG_C_FLAGS="--passC:\""--target=wasm32-unknown-unknown-wasm\"" --passC:\""-I./include\"""
NIM_CLANG_LINKER_FLAGS="--clang.options.linker:\"-nostdlib -Wl,--no-entry,--allow-undefined,--strip-all,--export-dynamic\" --passL:\"--target=wasm32-unknown-unknown-wasm\""
NIM_CLANG_ALL_FLAGS="${NIM_CLANG_C_FLAGS} ${NIM_CLANG_LINKER_FLAGS} --os:standalone --cpu:i386 --cc:clang --gc:none --nomain -d:release"
NIM_CLANG_WASM32_C="nim c -d:osk256_sig ${PATH_PARAMS} ${NIM_CLANG_ALL_FLAGS}"

cp /nimplay/examples/panicoverride.nim $PANIC_PATH/
eval "${NIM_CLANG_WASM32_C} --out:${WASM_FILE} ${NIM_FILE}"

# Postprocess produced wasm file
wasm2wat="wasm2wat"
wat2wasm="wat2wasm"

# Replace "env" with "ethereum"
$wasm2wat "$WASM_FILE" |
 sed 's/(import "env" /(import "ethereum" /g' |
 sed  '/(export.*memory\|main.*/! s/(export.*//g' > ./wasm.tmp

$wat2wasm -o "$WASM_FILE" ./wasm.tmp

rm ./wasm.tmp
rm $PANIC_PATH/panicoverride.nim
